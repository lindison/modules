#!/usr/bin/env bash

# To implement this command, edit the "Command implementation" section below. 

# Usage
# -----

# Comments prefixed with `#/` are managed by stubbs.
# The `command` and `usage` comments describe the command
# and show its options.
# 
#/ command: cliqrapp:stop: "stop"
#/ usage: rerun cliqrapp:stop  --id <> 

# Load common functions
# ---------------------

# Load the function library for this module.
# This loads rerun functions, too.
. $RERUN_MODULE_DIR/lib/functions.sh stop || { 
  echo >&2 "Failed loading function library." ; exit 1 ; 
}

# Error handling
# ---------------

# This script is designed to _fail-fast_.

# Trap errors and exit. The call to `rerun_die` will print the
# the error message and exit with the error command exit status. 

trap 'rerun_die $? "*** command failed: cliqrapp:stop. ***"' ERR

# Run [set] `nounset` to treat unset variables as errors. Set [pipefail]
# so a pipeline return status is the value of the last 
# (rightmost) command to exit with non-zero status.
#
# [set]: http://ss64.com/bash/set.html
# [pipefail]: http://www.gnu.org/software/bash/manual/html_node/Pipelines.html

set -o nounset -o pipefail

# Command variables
# -----------------

# This command script can access the following variables
# declared by `rerun` or by the option parser function.

#/ rerun-variables: RERUN, RERUN_VERSION, RERUN_MODULES, RERUN_MODULE_DIR
#/ option-variables: ID

# The `rerun_options_parse` function processes the command line
# arguments. Each accepted command line flag results in setting 
# one the corresponding option variables.

rerun_options_parse "$@"


# Command implementation
# ----------------------

test -f ~/.cliqr.env && . ~/.cliqr.env
export url="https://$SERVER/v1/jobs/${ID}?action=stop"
export OUT=/tmp/OUT.$$.a
curl -sS -k -X PUT -u $API_USER:$API_PASSWORD -H "Content-Type: application/json" $url >$OUT
#{"id":"9d470559-12ce-4a54-a7d1-b8667c4eaedb","resource":"https://cliqrmee-msdc01.ds.dtveng.net/v1/operationStatus/9d470559-12ce-4a54-a7d1-b8667c4eaedb","perms":[]}
cat $OUT
echo
STATUSURL=`cat $OUT | jq '.resource'|sed s/\"//g`
DONE=no
while [ X$STATUSURL != Xnull -a $DONE = no  ]
do
   sleep 6
   curl -sS -k -u $API_USER:$API_PASSWORD -H "Content-Type: application/json" $STATUSURL
   echo
done
exit $?

