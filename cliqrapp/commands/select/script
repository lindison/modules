#!/usr/bin/env bash

# To implement this command, edit the "Command implementation" section below. 

# Usage
# -----

# Comments prefixed with `#/` are managed by stubbs.
# The `command` and `usage` comments describe the command
# and show its options.
# 
#/ command: cliqrapp:select: "selects the current cliqr.sh"
#/ usage: rerun cliqrapp:select [options]

# Load common functions
# ---------------------

# Load the function library for this module.
# This loads rerun functions, too.
. $RERUN_MODULE_DIR/lib/functions.sh select || { 
  echo >&2 "Failed loading function library." ; exit 1 ; 
}

# Error handling
# ---------------

# This script is designed to _fail-fast_.

# Trap errors and exit. The call to `rerun_die` will print the
# the error message and exit with the error command exit status. 


# Run [set] `nounset` to treat unset variables as errors. Set [pipefail]
# so a pipeline return status is the value of the last 
# (rightmost) command to exit with non-zero status.
#
# [set]: http://ss64.com/bash/set.html
# [pipefail]: http://www.gnu.org/software/bash/manual/html_node/Pipelines.html

set -o nounset -o pipefail

# Command variables
# -----------------

# This command script can access the following variables
# declared by `rerun` or by the option parser function.

#/ rerun-variables: RERUN, RERUN_VERSION, RERUN_MODULES, RERUN_MODULE_DIR
#/ option-variables: 

# The `rerun_options_parse` function processes the command line
# arguments. Each accepted command line flag results in setting 
# one the corresponding option variables.

rerun_options_parse "$@"


# Command implementation
# ----------------------
ls -l ~/.cliqr.*.env|grep -v ~/.cliqr.env
trap 'rerun_die $? "*** command failed: cliqrapp:select. ***"' ERR
echo type the name of the currect cliqr file or NEW to create new file do not select ~/.cliqr.env
read -p file: file
if [ -f ${file} ]
then
  test -L ~/.cliqr.env && rm ~/.cliqr.env
  ln -s ${file} ~/.cliqr.env
  exit
else 
  echo {file} not found
fi
if [ -f  ~/.cliqr.${file}.env ]
then
  test -L ~/.cliqr.env && rm ~/.cliqr.env
  ln -s ~/.cliqr.${file}.env ~/.cliqr.env
  exit
fi
if [ $file = NEW ]
then
  read -p API_USER: API_USER 
  read -p API_PASSWORD: API_PASSWORD
  read -p SERVER: SERVER
  read -p Cliqr\ Api\ Version\ 3\ or\ 4: API_VERSION
  cat >~/.cliqr.$SERVER.$API_USER.env <<EOF
export API_USER=$API_USER
export API_PASSWORD=$API_PASSWORD
export SERVER=$SERVER
export API_VERSION=$API_VERSION
EOF
  test -L ~/.cliqr.env && rm ~/.cliqr.env
  ln -s ~/.cliqr.$SERVER.$API_USER.env ~/.cliqr.env
fi

# - - -
# Put the command implementation here.
# - - -

# Done. Exit with last command exit status.
exit $?

