#!/usr/bin/env bash

# To implement this command, edit the "Command implementation" section below. 

# Usage
# -----

# Comments prefixed with `#/` are managed by stubbs.
# The `command` and `usage` comments describe the command
# and show its options.
# 
#/ command: rundeck-admin:project-configure: "Configure a project."
#/ usage: rerun rundeck-admin:project-configure  --project <>  --url <>  --user <>  --password <> [ --file <>] [ --format <>] 

# Load common functions
# ---------------------

# Load the function library for this module.
# This loads rerun functions, too.
. $RERUN_MODULE_DIR/lib/functions.sh project-configure || { 
  echo >&2 "Failed loading function library." ; exit 1 ; 
}

# Error handling
# ---------------

# This script is designed to _fail-fast_.

# Trap errors and exit. The call to `rerun_die` will print the
# the error message and exit with the error command exit status. 

trap 'rerun_die $? "*** command failed: rundeck:project-configure. ***"' ERR

# Run [set] `nounset` to treat unset variables as errors. Set [pipefail]
# so a pipeline return status is the value of the last 
# (rightmost) command to exit with non-zero status.
#
# [set]: http://ss64.com/bash/set.html
# [pipefail]: http://www.gnu.org/software/bash/manual/html_node/Pipelines.html

set -o nounset -o pipefail

# Command variables
# -----------------

# This command script can access the following variables
# declared by `rerun` or by the option parser function.

#/ rerun-variables: RERUN, RERUN_VERSION, RERUN_MODULES, RERUN_MODULE_DIR
#/ option-variables: PROJECT URL USER PASSWORD FILE FORMAT

# The `rerun_options_parse` function processes the command line
# arguments. Each accepted command line flag results in setting 
# one the corresponding option variables.

rerun_options_parse "$@"


# Command implementation
# ----------------------
if [[ ! -f "$FILE" ]]
then
   	rerun_die 2 "File not found: $FILE"
fi

: ${FORMAT:=plain}
case $FORMAT in
	plain) content_type="text/plain";;
	xml)   content_type="application/xml";;
	json)  content_type="application/json";;
	*) echo >&2 "unsupported format. Specify plain|xml|json"
		exit 2
esac

# Authenticate
# ------------
rundeck_login $URL $USER $PASSWORD


if ! http_code=$(rundeck_curl -w "%{http_code}" \
    -H "Content-Type: $content_type" --data-binary @"$FILE"  \
	-X PUT ${URL}/api/11/project/$PROJECT/config 2>/dev/null)
then
    case ${http_code:-} in
    	404) rerun_die 1 "Project does not exist: $PROJECT" ;; 
		* ) rerun_die 3 "API error: PUT ${URL}/api/11/project/$PROJECT/config" ;;
	esac    
fi



# Done. Exit with last command exit status.
exit $?

